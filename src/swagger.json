{
  "swagger": "2.0",
  "info": {
    "description": "Build a sprint retrospective board to streamline the process of conducting a retrospective meeting.",
    "version": "1.0.0",
    "title": "Retrospective Board",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8010",
  "basePath": "",
  "tags": [{
      "name": "health",
      "description": "Check health of server"
    },
    {
      "name": "Retro Board",
      "description": "Retro Board rest Apis"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["health"],
        "description": "Get health status of server",
        "responses": {
          "200": {
            "description": "Healthy"
          }
        }
      }
    },
    "/signup": {      
      "post": {
        "tags": ["Author"],
        "description": "Create new Author",
        "operationId": "Create new Author ",
        "parameters": [{
          "name": "author",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Author"
          }
        }],
        "responses": {
          "200": {
            "description": "Added a new author to list of Authors",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "400": {
            "description": "Invalid Author, Unknown error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },

    "/login": {
      
      "post": {
        "tags": ["Author"],
        "description": "Login Author",
        "operationId": "Login Author ",
        "parameters": [{
          "name": "author",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Author"
          }
        }],
        "responses": {
          "200": {
            "description": "Succesfully Logged in Author",
            "schema": {
              "$ref": "#/definitions/Author"
            }
          },
          "400": {
            "description": "Invalid Author, Unknown error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/points": {      
      "post": {
        "tags": ["Points"],
        "description": "Create new Point",
        "operationId": "Create new Point ",
        "parameters": [{
          "name": "point",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Point"
          }
        }],
        "responses": {
          "200": {
            "description": "Added a new point to list of Points",
            "schema": {
              "$ref": "#/definitions/Point"
            }
          },
          "400": {
            "description": "Invalid Point, Unknown error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "get": {
        "tags": ["Points"],
        "summary": "Get points",
        "description": "Returns all the points from server",
        "parameters": [{
            "name": "limit",
            "in": "query",
            "description": "The retro points that needs to be fetched.",
            "required": false,
            "type": "string"
          },
          {
            "name": "offset",
            "in": "query",
            "description": "The retro points that needs to be fetched.",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "A List of Points",
            "schema": {
              "$ref": "#/definitions/Point"
            }
          },
          "404": {
            "description": "POINTS_NOT_FOUND_ERROR",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }      
    },
    "/points/{id}": {
      "get": {
        "tags": ["Points"],
        "summary" : "Get Point corresponding to the id",
        "description": "Return points based on ID",
        "operationId": "find point by id",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "ID of retro point to fetch",
          "required": true,
          "type": "integer",
          "format": "int64"
        }],
        "responses": {
          "200": {
            "description": "point response",
            "schema": {
              "$ref": "#/definitions/Point"
            }
          },
          "404": {
            "description": "POINTS_NOT_FOUND_ERROR",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },

      "patch": {
        "tags": ["Points"],
        "description": "update points based on ID",
        "operationId": "update point by id",
        "parameters": [{
          "name": "id",
          "in": "path",
          "description": "ID of retro point to update",
          "required": true,
          "type": "integer",
          "format": "int64"
        },{
          "name": "point",
          "in": "body",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Point"
          }
        }],
        "responses": {
          "200": {
            "description": "point response",
            "schema": {
              "$ref": "#/definitions/Point"
            }
          },
          "404": {
            "description": "POINTS_NOT_FOUND_ERROR",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
      
    }
  },

  "definitions": {
    "Author": {
      "type": "object",
      "required": ["name", "email", "password"],
      "properties": {            
        "name": {
          "type": "string",
          "example": "Tim Cook"
        },
        "email": {
          "type": "string",
          "example": "timcook@gmail.com"
        },
        "password": {
          "type": "string",
          "example": "newpwd123"
        }
      }
    },
    "Point":{
      "type":"object",
      "required":["title","category"],
      "properties":{
       
        "title":{
          "type":"string",
          "example":"sprint 1"
        },
        "description":{
          "type":"string",
          "example":"Involves Bug fixing and release x feature of y module"
        },
        "category":{
          "type":"enum",
          "example":"Went well"
        }
      }

    },
    "ErrorResponse": {
      "type": "object",
      "properties": {
        "error_code": {
          "type": "string",
          "example": "NOT_FOUND_ERROR"
        },
        "message": {
          "type": "string",
          "example": "Could not find any response"
        }
      }
    }
  }
}